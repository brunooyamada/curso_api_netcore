// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250425021432_Uf_Municipio_Cep")]
    partial class Uf_Municipio_Cep
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CepEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<long>("MunicipioId")
                        .HasColumnType("bigint");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Cep");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Cep", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MunicipioEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CodIBGE")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<long>("UfId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CodIBGE");

                    b.HasIndex("UfId");

                    b.ToTable("Municipio", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.UfEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Sigla")
                        .IsUnique();

                    b.ToTable("Uf", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9449),
                            Nome = "Acre",
                            Sigla = "AC"
                        },
                        new
                        {
                            Id = 2L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9451),
                            Nome = "Alagoas",
                            Sigla = "AL"
                        },
                        new
                        {
                            Id = 3L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9452),
                            Nome = "Amapá",
                            Sigla = "AP"
                        },
                        new
                        {
                            Id = 4L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9454),
                            Nome = "Amazonas",
                            Sigla = "AM"
                        },
                        new
                        {
                            Id = 5L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9455),
                            Nome = "Bahia",
                            Sigla = "BA"
                        },
                        new
                        {
                            Id = 6L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9456),
                            Nome = "Ceará",
                            Sigla = "CE"
                        },
                        new
                        {
                            Id = 7L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9458),
                            Nome = "Distrito Federal",
                            Sigla = "DF"
                        },
                        new
                        {
                            Id = 8L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9459),
                            Nome = "Espírito Santo",
                            Sigla = "ES"
                        },
                        new
                        {
                            Id = 9L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9461),
                            Nome = "Goiás",
                            Sigla = "GO"
                        },
                        new
                        {
                            Id = 10L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9463),
                            Nome = "Maranhão",
                            Sigla = "MA"
                        },
                        new
                        {
                            Id = 11L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9464),
                            Nome = "Mato Grosso",
                            Sigla = "MT"
                        },
                        new
                        {
                            Id = 12L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9465),
                            Nome = "Mato Grosso do Sul",
                            Sigla = "MS"
                        },
                        new
                        {
                            Id = 13L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9466),
                            Nome = "Minas Gerais",
                            Sigla = "MG"
                        },
                        new
                        {
                            Id = 14L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9468),
                            Nome = "Pará",
                            Sigla = "PA"
                        },
                        new
                        {
                            Id = 15L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9469),
                            Nome = "Paraíba",
                            Sigla = "PB"
                        },
                        new
                        {
                            Id = 16L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9470),
                            Nome = "Paraná",
                            Sigla = "PR"
                        },
                        new
                        {
                            Id = 17L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9471),
                            Nome = "Pernambuco",
                            Sigla = "PE"
                        },
                        new
                        {
                            Id = 18L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9472),
                            Nome = "Piauí",
                            Sigla = "PI"
                        },
                        new
                        {
                            Id = 19L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9473),
                            Nome = "Rio de Janeiro",
                            Sigla = "RJ"
                        },
                        new
                        {
                            Id = 20L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9475),
                            Nome = "Rio Grande do Norte",
                            Sigla = "RN"
                        },
                        new
                        {
                            Id = 21L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9476),
                            Nome = "Rio Grande do Sul",
                            Sigla = "RS"
                        },
                        new
                        {
                            Id = 22L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9477),
                            Nome = "Rondônia",
                            Sigla = "RO"
                        },
                        new
                        {
                            Id = 23L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9478),
                            Nome = "Roraima",
                            Sigla = "RR"
                        },
                        new
                        {
                            Id = 24L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9479),
                            Nome = "Santa Catarina",
                            Sigla = "SC"
                        },
                        new
                        {
                            Id = 25L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9481),
                            Nome = "São Paulo",
                            Sigla = "SP"
                        },
                        new
                        {
                            Id = 26L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9482),
                            Nome = "Sergipe",
                            Sigla = "SE"
                        },
                        new
                        {
                            Id = 27L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9483),
                            Nome = "Tocantins",
                            Sigla = "TO"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9179),
                            Email = "mfrinfo@mail.com",
                            Name = "Administrador",
                            UpdateAt = new DateTime(2025, 4, 25, 2, 14, 31, 940, DateTimeKind.Utc).AddTicks(9183)
                        });
                });

            modelBuilder.Entity("Domain.Entities.CepEntity", b =>
                {
                    b.HasOne("Domain.Entities.MunicipioEntity", "Municipio")
                        .WithMany("Ceps")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Domain.Entities.MunicipioEntity", b =>
                {
                    b.HasOne("Domain.Entities.UfEntity", "Uf")
                        .WithMany("Municipios")
                        .HasForeignKey("UfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uf");
                });

            modelBuilder.Entity("Domain.Entities.MunicipioEntity", b =>
                {
                    b.Navigation("Ceps");
                });

            modelBuilder.Entity("Domain.Entities.UfEntity", b =>
                {
                    b.Navigation("Municipios");
                });
#pragma warning restore 612, 618
        }
    }
}
